
T10619.hs:9:15: error:
    • Couldn't match type ‘p’ with ‘forall b. b -> b’
      Expected: p -> p
        Actual: (forall a. a -> a) -> forall b. b -> b
      ‘p’ is a rigid type variable bound by
        the inferred type of foo :: p1 -> p -> p
        at T10619.hs:(8,1)-(10,20)
    • In the expression:
          (\ x -> x) :: (forall a. a -> a) -> forall b. b -> b
      In the expression:
        if True then
            ((\ x -> x) :: (forall a. a -> a) -> forall b. b -> b)
        else
            \ y -> y
      In an equation for ‘foo’:
          foo _
            = if True then
                  ((\ x -> x) :: (forall a. a -> a) -> forall b. b -> b)
              else
                  \ y -> y
    • Relevant bindings include
        foo :: p1 -> p -> p (bound at T10619.hs:8:1)

T10619.hs:14:15: error:
    • Couldn't match type ‘p’ with ‘forall a. a -> a’
      Expected: p -> p
        Actual: (forall a. a -> a) -> forall b. b -> b
      ‘p’ is a rigid type variable bound by
        the inferred type of bar :: p1 -> p -> p
        at T10619.hs:(12,1)-(14,66)
    • In the expression:
          (\ x -> x) :: (forall a. a -> a) -> forall b. b -> b
      In the expression:
        if True then
            \ y -> y
        else
            ((\ x -> x) :: (forall a. a -> a) -> forall b. b -> b)
      In an equation for ‘bar’:
          bar _
            = if True then
                  \ y -> y
              else
                  ((\ x -> x) :: (forall a. a -> a) -> forall b. b -> b)
    • Relevant bindings include
        bar :: p1 -> p -> p (bound at T10619.hs:12:1)

T10619.hs:16:13: error:
    • Couldn't match type ‘p’ with ‘forall b. b -> b’
      Expected: p -> p
        Actual: (forall a. a -> a) -> forall b. b -> b
      ‘p’ is a rigid type variable bound by
        the inferred type of baz :: Bool -> p -> p
        at T10619.hs:(16,1)-(17,19)
    • In the expression:
          (\ x -> x) :: (forall a. a -> a) -> forall b. b -> b
      In an equation for ‘baz’:
          baz True = (\ x -> x) :: (forall a. a -> a) -> forall b. b -> b
    • Relevant bindings include
        baz :: Bool -> p -> p (bound at T10619.hs:16:1)

T10619.hs:20:14: error:
    • Couldn't match type ‘p’ with ‘forall a. a -> a’
      Expected: p -> p
        Actual: (forall a. a -> a) -> forall b. b -> b
      ‘p’ is a rigid type variable bound by
        the inferred type of quux :: Bool -> p -> p
        at T10619.hs:(19,1)-(20,64)
    • In the expression:
          (\ x -> x) :: (forall a. a -> a) -> forall b. b -> b
      In an equation for ‘quux’:
          quux True = (\ x -> x) :: (forall a. a -> a) -> forall b. b -> b
    • Relevant bindings include
        quux :: Bool -> p -> p (bound at T10619.hs:19:1)
